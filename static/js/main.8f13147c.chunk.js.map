{"version":3,"sources":["componets/Context.js","componets/Form.js","componets/Loading.js","componets/Movies.js","componets/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","data","setData","loading","setLoading","text","setText","resultStatus","setResultStatus","fetchData","useCallback","a","fetch","response","json","undefined","Search","console","log","useEffect","Provider","value","useGlobalContext","useContext","Form","className","onChange","e","target","type","placeholder","Loading","Movies","map","item","index","Poster","Title","Type","imdbID","to","src","alt","Detail","match","detailData","setDetailData","params","id","Released","Genre","Director","Writer","Actors","Plot","imdbRating","totalSeasons","GenreArray","split","h","starArray","i","parseInt","push","number","style","display","width","toString","length","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f13147c.chunk.js","sourcesContent":["import React , { useState,useEffect,useContext, useCallback } from \"react\"\r\nconst AppContext = React.createContext()\r\n\r\nconst AppProvider = ({children})=>{\r\n    const [data,setData] = useState([])\r\n    const [loading,setLoading] = useState(false)\r\n    const [text,setText] = useState(\"spider\")\r\n    const [resultStatus,setResultStatus] = useState(false)\r\n    const fetchData = useCallback(async ()=>{\r\n        setLoading(true)\r\n        try\r\n        {\r\n            const response = await fetch(`https://www.omdbapi.com/?s=${text}&apikey=30cb0b35&`)\r\n            const data = await response.json()\r\n            const {Search} = data\r\n            if(Search == undefined)\r\n            {\r\n            setData([])\r\n            setLoading(false)\r\n            setResultStatus(true)\r\n            }\r\n            else\r\n            {\r\n            setData(Search)\r\n            console.log(Search,response)\r\n            setLoading(false)\r\n            setResultStatus(false)\r\n            }\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n        }\r\n    },[text])\r\n    useEffect(()=>{\r\n        fetchData()\r\n    },[fetchData])\r\n\r\n    return (\r\n        <AppContext.Provider value = {{text,setText,data,loading,setLoading,resultStatus}}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\nconst useGlobalContext = ()=>{\r\n    return useContext(AppContext)\r\n}\r\nexport {AppProvider,useGlobalContext};","import React from \"react\"\r\nimport { useGlobalContext } from \"./Context\";\r\nconst Form = ()=>{\r\n    const { text,setText } = useGlobalContext()\r\n    return (\r\n            <section className = \"form-container\">\r\n                <form>\r\n                    <input value = {text} onChange = {(e)=>setText(e.target.value)} type = \"text\" placeholder = \"Search for Movies\"/>\r\n                </form>\r\n            </section>\r\n    )\r\n}\r\nexport default Form;","import React from \"react\"\r\nconst Loading = ()=>{\r\n    return (\r\n        <div className = \"loading-container\">\r\n            <div className = \"loading\">\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\nexport default Loading;","import React from \"react\";\r\nimport { useGlobalContext } from \"./Context\";\r\nimport { Link } from \"react-router-dom\"\r\nimport Loading from \"./Loading\";\r\nconst Movies = ()=>{\r\n    const {data,loading,resultStatus,text} = useGlobalContext()\r\n    if(loading)\r\n    {\r\n        return (\r\n            <Loading/>\r\n        )\r\n    }\r\n    else if(resultStatus)\r\n    {\r\n        return (\r\n            <div className = \"loading-container\">\r\n                <h1>{`No Result Found for \"${text}\"`}</h1>\r\n            </div>\r\n        )\r\n    }\r\n    else\r\n    {\r\n    return (\r\n        <section className = \"movies-container\">\r\n            <div className = \"inner-movies-container\">\r\n                {data && data.map((item,index)=>{\r\n                    const {Poster,Type,Title,imdbID} = item\r\n                    return (\r\n                        <Link key = {index} to = {`/detail/${imdbID}`}>\r\n                        <article key = {imdbID}>\r\n                            <div className = \"img-container\">\r\n                                    <img src = {Poster} alt = {Title}/>\r\n                            </div>\r\n                            <div className = \"info-container\">\r\n                                <p>{Title}</p>\r\n                            </div>\r\n                        </article>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </div>\r\n        </section>\r\n    )\r\n            }\r\n}\r\nexport default Movies;","import React, {useState, useEffect} from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport { FaStar } from \"react-icons/fa\"\r\nimport { useGlobalContext } from \"./Context\"\r\nimport Loading from \"./Loading\"\r\nconst Detail = ({match})=>{\r\n    const {loading,setLoading} = useGlobalContext()\r\n    const [detailData,setDetailData] = useState([])\r\n    const fetchData = async ()=>{\r\n        setLoading(true)\r\n        try\r\n        {\r\n        const response = await fetch(`https://www.omdbapi.com/?i=${match.params.id}&apikey=30cb0b35`)\r\n        const data = await response.json()\r\n        setLoading(false)\r\n        setDetailData([data])\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        fetchData()\r\n    },[])\r\n    if(loading)\r\n    {\r\n        return (\r\n            <Loading/>\r\n        )\r\n    }\r\n    else\r\n    {\r\n    return (\r\n        <main className = \"detail-container\">\r\n            {detailData.map((item,index)=>{\r\n                const {Title,Released,Genre,Director,Writer,Actors,Plot,Poster,imdbRating,imdbID,Type,totalSeasons} = item\r\n                const GenreArray = Genre.split(\",\")\r\n                const h = imdbRating/2;\r\n                let starArray = []\r\n                for(let i = 1; i<=parseInt(h); i++)\r\n                {\r\n                    starArray.push(i)\r\n                    if(i == parseInt(h))\r\n                    {\r\n                        starArray.push(h)\r\n                    }\r\n                }\r\n                console.log(starArray)\r\n                return (\r\n                    <section key = {imdbID}>\r\n                        <article className = \"detail-image-container\">\r\n                            <img src = {Poster} alt = {Title}/>\r\n                            <div>\r\n                                <h1>{Title}</h1>\r\n                                <p className = \"type\">Type: {Type}</p>\r\n                                <p className = \"release\">Release date: {Released}</p>\r\n                                <div className = \"rating\">\r\n                                    Rating : \r\n                                    <div className = \"star-container\">\r\n                                    {starArray.map((e)=>{\r\n                                        let number = e\r\n                                        return (\r\n                                            <div style = {{display:\"inline-block\"}}>\r\n                                            <p style = {{width:number.toString().length > 2 ? `${(e/5)*100}%` : \"\"}}>\r\n                                                <FaStar className = \"star\"/>\r\n                                            </p>\r\n                                            </div>\r\n                                        )}\r\n                                        )}\r\n                                        </div>\r\n                                    <span>{imdbRating}/10</span>\r\n                                </div>\r\n                            </div>\r\n                        </article>\r\n                        <article className = \"detail-info-container\">\r\n                            <div className = \"genre-container\">\r\n                                <h2>Genre :</h2>\r\n                                <div>\r\n                                    {GenreArray.map((e)=><p>{e}</p>)}\r\n                                </div>\r\n                            </div>\r\n                            <div className = \"plot-container\">\r\n                                <h2>Plot</h2>\r\n                                <p>{Plot}</p>\r\n                            </div>\r\n                            <div>\r\n                                <p><span>Writer:</span> {Writer}</p>\r\n                                <p><span>Actors:</span> {Actors}</p>\r\n                                <p><span>Director:</span> {Director}</p>\r\n                                {Type == \"series\" ? <p><span>totalSeasons:</span>{totalSeasons}</p> : \"\"}\r\n                            </div>\r\n                            <Link to = \"/\">\r\n                            <button className = \"back\">Back To Search</button>\r\n                            </Link>\r\n                        </article>\r\n                    </section>\r\n                )\r\n            })}\r\n        </main>\r\n    )\r\n        }\r\n        }\r\nexport default Detail;","import Form from \"./componets/Form\"\nimport Movies from \"./componets/Movies\"\nimport Detail from \"./componets/Detail\";\nimport './App.css';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path = \"/\">\n          <main>\n                <h1 className = \"heading\">Movies Search</h1>\n                <Form/>\n                <Movies/>\n          </main>\n        </Route>\n        <Route path = \"/detail/:id\" component = {Detail}/>\n      </Switch>\n    </Router>\n  );\n}\n//when i use component attribute in Route component than only we get param object in Detail \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppProvider } from \"./componets/Context\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n    <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}